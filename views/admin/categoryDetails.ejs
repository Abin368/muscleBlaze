<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin - Category Management</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/sidebar.css">
    <link rel="stylesheet" href="/customerDetails.css">
    <link rel="stylesheet" href="/categoryDetails.css">
    
</head>
<body>
    <div class="container">
        <%- include('../../views/partials/admin/sidebar') %>
        <div class="main-content">
            <h1>Category Management</h1>
            
            <!-- Search Bar -->
            <form action="/admin/categories" method="GET" class="search-form" id="searchForm">
                <input type="text" name="search" placeholder="Search category..." value="<%= search %>" class="search-input" id="searchInput">
                <button type="submit" class="search-button">
                    <i class="fas fa-search"></i>
                </button>
            </form>
       
            <!-- Category Table -->
            <table>
                <thead>
                    <tr>
                        <th>No</th>
                        <th>Category Name</th>
                        <th>Description</th>
                        <th>Offer</th>
                        <th>Offer</th>
                        <th>List/Unlist</th>
                        <th>Action</th>
                    </tr>
                </thead>
               <tbody id="categoryTableBody">
    <% cat.forEach((category, index) => { %>
        <tr>
            <td><%= index + 1 %></td>
            <td><%= category.name %></td>
            <td><%= category.description %></td>

            <td id="offer-cell-<%= category._id %>"><%= category.categoryOffer || 0 %></td>
            <td id="offer-action-cell-<%= category._id %>">
            <% if (!category.categoryOffer || category.categoryOffer === 0) { %>
                <button class="custom-btn green" onclick="addCategoryOffer('<%= category._id %>')">
                    Add Offer
                </button>
            <% } else { %>
                <button class="custom-btn red" onclick="removeCategoryOffer('<%= category._id %>')">
                    Remove Offer
                </button>
            <% } %>
        </td>
            
            
  
            <td id="category-btn-<%= category._id %>">
                <% if (category.isListed) { %>
                    <button class="btn btn-danger" style="width: 70px;" 
                            onclick="confirmUnlist('<%= category._id %>')">
                        Unlist
                    </button>
                <% } else { %>
                    <button class="btn btn-success" style="width: 70px;" 
                            onclick="confirmList('<%= category._id %>')">
                        List
                    </button>
                <% } %>
            </td>
            
            
            <td class="action-icons">
                <button class="btn btn-primary" style="width: 70px;">
                        <a href="/admin/editCategory/<%= category._id %>" class="btn btn-warning btn-sm" style="color: black;">
                            <i class="fas fa-edit"></i> Edit
                        </a>
                </button>
                
                <a href="javascript:void(0);" onclick="confirmDelete('<%= category._id %>', this)" style="text-decoration: none;">
                    <button class="btn btn-danger" style="width: 70px; color: white;">
                        Delete
                    </button>
                </a>
                
            </td>
            
            
        </tr>
    <% }) %>
</tbody>

            </table>
            
            <!-- Pagination -->
            <div class="pagination">
                <% if (currentPage > 1) { %>
                    <a href="?page=<%= currentPage - 1 %>&search=<%= search %>">Previous</a>
                <% } %>
            
                <% for (let i = 1; i <= totalPages; i++) { %>
                    <a href="?page=<%= i %>&search=<%= search %>" class="<%= i === currentPage ? 'active' : '' %>">
                        <%= i %>
                    </a>
                <% } %>
            
                <% if (currentPage < totalPages) { %>
                    <a href="?page=<%= currentPage + 1 %>&search=<%= search %>">Next</a>
                <% } %>
            </div>



            
              <!-- ----------------------------------->
            
          

             <% if (successMessage) { %>
                <div class="success-message" style="color: green;">
                    <%= successMessage %>
                </div>
            <% } %>
            
            <% if (errorMessage) { %>
                <div class="error-message" style="color: red;">
                    <%= errorMessage %>
                </div>
            <% } %>
            
            
            <div id="formMessage"></div>

            <div class="add-category">
                <h2>Add New Category</h2>


                <form id="addCategoryForm" class="add-category-form" data-search="<%= search || '' %>">

                    <h2>Add New Category</h2>
                    
                    <div class="input-group">
                        <input type="text" name="name" id="name" placeholder="Category Name" required />
                        <label for="name"></label>
                    </div>
                
                    <div class="input-group">
                        <input type="text" name="description" id="description" placeholder="Description" required />
                        <label for="description"></label>
                    </div>
                
                    <button type="submit" class="submit-btn">Add Ctegory</button>
                </form>
                
             
                
            </div>
        </div>
    </div>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
   <script src="handleFormSubmit.js"></script>
   <script>
document.getElementById('addCategoryForm').addEventListener('submit', async function (e) {
    e.preventDefault();

    const form = e.target;
    const searchQuery = form.dataset.search || "";
    const name = document.getElementById('name').value.trim();
    const description = document.getElementById('description').value.trim();
    const messageBox = document.getElementById('formMessage');

    try {
        const response = await fetch(`/admin/addCategory?search=${encodeURIComponent(searchQuery)}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-Requested-With': 'XMLHttpRequest'
            },
            body: JSON.stringify({ name, description })
        });

        const result = await response.json();

        if (result.success) {
            messageBox.innerHTML = `<p style="color:green">${result.message}</p>`;
            form.reset();

            fetchCategories();
        } else {
            messageBox.innerHTML = `<p style="color:red">${result.message}</p>`;
        }
    } catch (err) {
        console.error("Error submitting category:", err);
        messageBox.innerHTML = `<p style="color:red">Server error. Try again later.</p>`;
    }
});



//-----------------------------------------------------------------
    
    document.addEventListener("DOMContentLoaded", function () {
    const searchForm = document.getElementById("searchForm");
    const searchInput = document.getElementById("searchInput");

    searchForm.addEventListener("submit", function (event) {
        event.preventDefault(); 
        fetchCategories(1, searchInput.value.trim()); 
    });

    fetchCategories();
});

function fetchCategories(page = 1, search = '') {
    fetch(`/admin/categories?page=${page}&search=${search}`, {
        method: 'GET',
        headers: { 'X-Requested-With': 'XMLHttpRequest' } 
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            updateCategoryTable(data.categoryData);
            updatePaginationButtons(data.currentPage, data.totalPages, search);
        } else {
            showNoDataMessage();
        }
    })
    .catch(error => {
        console.error("Error fetching categories:", error);
        showNoDataMessage();
    });
}
//------------------------------------------------
function updateCategoryTable(categoryData) {
    const categoryTableBody = document.getElementById("categoryTableBody");

    if (categoryData.length === 0) {
        showNoDataMessage();
        return;
    }

    categoryTableBody.innerHTML = ""; 

    categoryData.forEach((category, index) => {
        categoryTableBody.innerHTML += `
            <tr id="category-row-${category._id}">
                <td>${index + 1}</td>
                <td>${category.name}</td>
                <td>${category.description}</td>
                <td id="offer-cell-${category._id}">${category.categoryOffer || 0}</td>
                <td id="offer-action-cell-${category._id}">
                    ${!category.categoryOffer || category.categoryOffer === 0 ? 
                        `<button class="custom-btn green" onclick="addCategoryOffer('${category._id}')">Add Offer</button>` : 
                        `<button class="custom-btn red" onclick="removeCategoryOffer('${category._id}')">Remove Offer</button>`}
                </td>
                <td id="category-btn-${category._id}">
                    ${category.isListed ? 
                        `<button class="btn btn-danger" style="width: 70px;" onclick="confirmUnlist('${category._id}')">Unlist</button>` : 
                        `<button class="btn btn-success" style="width: 70px;" onclick="confirmList('${category._id}')">List</button>`}
                </td>
                <td class="action-icons">
                    <button class="btn btn-primary" style="width: 70px;">
                        <a href="/admin/editCategory/${category._id}" class="btn btn-warning btn-sm" style="color: black;">
                            <i class="fas fa-edit"></i> Edit
                        </a>
                    </button>
                    <a href="javascript:void(0);" onclick="confirmDelete('${category._id}', this)" style="text-decoration: none;">
                        <button class="btn btn-danger" style="width: 70px; color: white;">Delete</button>
                    </a>
                </td>
            </tr>
        `;
    });
}


//------------------------------------
function showNoDataMessage() {
    const categoryTableBody = document.getElementById("categoryTableBody");
    categoryTableBody.innerHTML = `<tr><td colspan="7" style="text-align: center; font-weight: bold;">No Data Found</td></tr>`;
}

function updatePaginationButtons(currentPage, totalPages, search) {
    const paginationDiv = document.querySelector(".pagination");
    paginationDiv.innerHTML = ""; 

    if (totalPages === 0) return; 

    if (currentPage > 1) {
        paginationDiv.innerHTML += `<a href="javascript:void(0);" onclick="fetchCategories(${currentPage - 1}, '${search}')">Previous</a>`;
    }

    for (let i = 1; i <= totalPages; i++) {
        paginationDiv.innerHTML += `<a href="javascript:void(0);" onclick="fetchCategories(${i}, '${search}')" class="${i === currentPage ? 'active' : ''}">${i}</a>`;
    }

    if (currentPage < totalPages) {
        paginationDiv.innerHTML += `<a href="javascript:void(0);" onclick="fetchCategories(${currentPage + 1}, '${search}')">Next</a>`;
    }
}




  //---------------------------
  async function addCategoryOffer(categoryId) {
    const { value: amount } = await Swal.fire({
        title: 'Category Offer in percentage',
        input: 'number',
        inputPlaceholder: '% Percentage',
        inputAttributes: { min: 0, max: 100, step: 1 }
    });

    if (amount) {
        try {
            const response = await fetch('/admin/addCategoryOffer', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ categoryId, percentage: amount })
            });
            const data = await response.json();

            if (data.status === true) {
                Swal.fire("Offer added", "The category offer has been added successfully.", "success");

               
                const offerCell = document.getElementById(`offer-cell-${categoryId}`);
                const actionCell = document.getElementById(`offer-action-cell-${categoryId}`);

                if (offerCell) offerCell.textContent = amount;
                if (actionCell) {
                    actionCell.innerHTML = `
                        <button class="custom-btn red" onclick="removeCategoryOffer('${categoryId}')">
                            Remove Offer
                        </button>
                    `;
                }
            } else {
                Swal.fire("Failed", data.message || "There was an issue adding the category offer.", "error");
            }
        } catch (error) {
            console.error("Error adding category offer:", error);
            Swal.fire("Failed", "An error occurred while adding the category offer.", "error");
        }
    }
}
//-----------------------------------
async function removeCategoryOffer(categoryId) {
    const result = await Swal.fire({
        title: "Are you sure?",
        text: "This will remove the category offer!",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#dc3545",
        cancelButtonColor: "#3085d6",
        confirmButtonText: "Yes, remove it!"
    });

    if (result.isConfirmed) {
        try {
            const response = await fetch('/admin/removeCategoryOffer', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ categoryId })
            });
            const data = await response.json();

            if (data.status === true) {
                Swal.fire("Offer removed", "The category offer has been removed.", "success");

                const offerCell = document.getElementById(`offer-cell-${categoryId}`);
                const actionCell = document.getElementById(`offer-action-cell-${categoryId}`);

                if (offerCell) offerCell.textContent = 0;
                if (actionCell) {
                    actionCell.innerHTML = `
                        <button class="custom-btn green" onclick="addCategoryOffer('${categoryId}')">
                            Add Offer
                        </button>
                    `;
                }
            } else {
                Swal.fire("Failed", data.message || "There was an issue removing the category offer.", "error");
            }
        } catch (error) {
            console.error("Error removing category offer:", error);
            Swal.fire("Failed", "An error occurred while removing the category offer.", "error");
        }
    }
}
//-------------------------------
function confirmDelete(categoryId, btn) {
        Swal.fire({
            title: "Are you sure?",
            text: "Once deleted, you won't be able to recover this category!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#d33",
            cancelButtonColor: "#3085d6",
            confirmButtonText: "Yes, delete it!"
        }).then((result) => {
            if (result.isConfirmed) {
                fetch(`/admin/deleteCategory?id=${categoryId}`, {
                    method: "DELETE"
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        Swal.fire("Deleted!", "Category has been deleted.", "success");
                        
                        btn.closest('tr').remove();
                        fetchCategories();
                    } else {
                        Swal.fire("Error!", "Failed to delete category.", "error");
                    }
                })
                .catch(error => {
                    console.error("Error:", error);
                    Swal.fire("Error!", "Something went wrong.", "error");
                });
            }
        });
    }
    //---------------------------------
    function confirmUnlist(categoryId) {
    Swal.fire({
        title: "Are you sure?",
        text: "This category will be unlisted!",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#d33",
        cancelButtonColor: "#3085d6",
        confirmButtonText: "Yes, unlist it!"
    }).then((result) => {
        if (result.isConfirmed) {
            fetch(`/admin/listCategory`, {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ id: categoryId })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire("Success!", "Category unlisted successfully.", "success");

                   
                    document.getElementById(`category-btn-${categoryId}`).innerHTML = 
                        `<button class="btn btn-success" style="width: 70px;" 
                                 onclick="confirmList('${categoryId}')">
                            List
                        </button>`;
                } else {
                    Swal.fire("Error!", "Something went wrong.", "error");
                }
            })
            .catch(error => console.error("Error:", error));
        }
    });
}

function confirmList(categoryId) {
    Swal.fire({
        title: "Are you sure?",
        text: "This category will be listed!",
        icon: "info",
        showCancelButton: true,
        confirmButtonColor: "#28a745",
        cancelButtonColor: "#3085d6",
        confirmButtonText: "Yes, list it!"
    }).then((result) => {
        if (result.isConfirmed) {
            fetch(`/admin/unlistCategory`, {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ id: categoryId })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire("Success!", "Category listed successfully.", "success");

                  
                    document.getElementById(`category-btn-${categoryId}`).innerHTML = 
                        `<button class="btn btn-danger" style="width: 70px;" 
                                 onclick="confirmUnlist('${categoryId}')">
                            Unlist
                        </button>`;
                } else {
                    Swal.fire("Error!", "Something went wrong.", "error");
                }
            })
            .catch(error => console.error("Error:", error));
        }
    });
}



   </script>
</body>
</html>

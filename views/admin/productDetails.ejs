<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin - Category Management</title>
    <!-- <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet"> -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/sidebar.css">
    <link rel="stylesheet" href="/customerDetails.css">
    <link rel="stylesheet" href="/categoryDetails.css">
    
</head>
<body>
    <div class="container">
        <%- include('../../views/partials/admin/sidebar') %>
        <div class="main-content">
            <h1>Product Management</h1>
            
            <!-- Search Bar -->
            <form action="/admin/products" method="GET" class="search-form" id="searchForm">
                <input type="text" name="search" placeholder="Search product..." value="<%= search || '' %>" class="search-input" id="searchInput">
                <button type="submit" class="search-button">
                    <i class="fas fa-search"></i>
                </button>
            </form>
            
       
            <!-- Category Table -->
            <div class="products-container">
            <table>
                <thead>
                    <tr>
                        <th>No</th>
                        <th>Product</th>
                        <th>Category</th>
                        <th>Flavor</th>
                        <th>Sale Price</th>
                        <th>Offer Price</th>
                        <th>Offer</th>
                        <th>Quantity</th>
                        <th>Action</th>
                        <th>Edit</th>
                    </tr>
                </thead>
                <tbody>
                    <% if (data.length === 0) { %>
                        <tr>
                            <td colspan="10" class="text-center text-danger">No products found.</td>
                        </tr>
                    <% } else { %>
                        <% for (let i = data.length - 1; i >= 0; i--) { %>
                            <tr data-product-id="<%= data[i]._id %>" id="row-<%= data[i]._id %>">

                                <td><%= data.length - i %></td>
                                <td><%= data[i].productName %></td>
                                <td><%= data[i].category.name %></td>
                                <td><%= data[i].flavor %></td>
                            
                               
                                <td class="sale-price"><%= data[i].salePrice %></td>
                            
                                
                                <td class="offer-value">
                                    <% if (data[i].productOffer) { %>
                                        <%= data[i].productOffer %>%
                                    <% } else { %>
                                        0%
                                    <% } %>
                                </td>
                            
                               
                                <td>
                                    <% if (!data[i].productOffer || data[i].productOffer === 0) { %>
                                        <button class="custom-btn green offer-action" onclick="addOffer('<%= data[i]._id %>')">
                                            Add Offer
                                        </button>
                                    <% } else { %>
                                        <button class="custom-btn red offer-action" onclick="removeOffer('<%= data[i]._id %>')">
                                            Remove Offer
                                        </button>
                                    <% } %>
                                </td>
                            
                                <td><%= data[i].quantity %></td>

                                <td id="btn-<%= data[i]._id %>">
                                    <% if (!data[i].isBlocked) { %>
                                        <a href="javascript:void(0);" 
                                           onclick="confirmBlock('<%= data[i]._id %>')" 
                                           class="custom-btn red">Block</a>
                                    <% } else { %>
                                        <a href="javascript:void(0);" 
                                           onclick="confirmUnblock('<%= data[i]._id %>')" 
                                           class="custom-btn green">Unblock</a>
                                    <% } %>
                                </td>
                                
                                
                                
                                    
                                
                                    <td class="action-icons">
                                        <a href="/admin/editProduct?id=<%= data[i]._id %>" class="action-btn orange">Edit</a>
                                        <a href="javascript:void(0);" 
                                           onclick="confirmDelete('<%= data[i]._id %>')" 
                                           class="action-btn red">Delete</a>
                                    </td>
                               
                                

                            </tr>
                            
                        <% } %>
                    <% } %>
                </tbody>
                

            </table>
        </div>
            
            <!-- Pagination -->
            <div class="pagination">
                <% if (currentPage > 1) { %>
                    <a href="#" class="page-link" data-page="<%= currentPage - 1 %>">Previous</a>
                <% } %>
            
                <% for (let i = 1; i <= totalPages; i++) { %>
                    <a href="#" class="page-link <%= i === currentPage ? 'active' : '' %>" data-page="<%= i %>"><%= i %></a>
                <% } %>
            
                <% if (currentPage < totalPages) { %>
                    <a href="#" class="page-link" data-page="<%= currentPage + 1 %>">Next</a>
                <% } %>
            </div>
            
            
            
            

            
        </div>
    </div>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

   <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
   <!-- <script src="handleFormSubmit.js"></script> -->
   <script>

document.addEventListener("DOMContentLoaded", function () {


function fetchProducts(page = 1, search = "") {
    fetch(`/admin/products?page=${page}&search=${encodeURIComponent(search)}`)
        .then(response => response.text())
        .then(data => {
            let parser = new DOMParser();
            let doc = parser.parseFromString(data, "text/html");

            const newProducts = doc.querySelector(".products-container");
            const newPagination = doc.querySelector(".pagination");

            document.querySelector(".products-container").innerHTML =
                newProducts ? newProducts.innerHTML : "<div class='text-center text-danger mt-3'>No products found.</div>";

            document.querySelector(".pagination").innerHTML =
                newPagination ? newPagination.innerHTML : "";
        })
        .catch(error => console.error("Error fetching products:", error));
}


document.body.addEventListener("click", function (e) {
    if (e.target.classList.contains("page-link")) {
        e.preventDefault();
        let page = e.target.getAttribute("data-page");
        let search = document.getElementById("searchInput")?.value || "";
        fetchProducts(page, search);
    }
});


const searchForm = document.getElementById("searchForm");
const searchInput = document.getElementById("searchInput");

if (searchForm && searchInput) {
    searchForm.addEventListener("submit", function (event) {
        event.preventDefault();
        const query = searchInput.value.trim();
        fetchProducts(1, query);
    });
}

});



//-----------------------------
async function addOffer(productId) {
    const { value: amount } = await Swal.fire({
        title: 'Offer in percentage',
        input: 'number',
        inputPlaceholder: '% Percentage',
        inputAttributes: {
            min: 0,
            max: 100,
            step: 1
        }
    });

    if (amount) {
        $.ajax({
            url: '/admin/addProductOffer',
            method: 'POST',
            data: {
                percentage: amount,
                productId: productId
            },
            success: (response) => {
                if (response.status === true) {
                    Swal.fire("Offer added", "The offer has been added successfully.", "success");

                   
                    const row = document.querySelector(`tr[data-product-id="${productId}"]`);
                    if (row) {
                        row.querySelector(".offer-value").textContent = `${amount}%`;
                        row.querySelector(".sale-price").textContent = response.salePrice;

                        const offerBtn = row.querySelector(".offer-action");
                        offerBtn.classList.remove("green");
                        offerBtn.classList.add("red");
                        offerBtn.textContent = "Remove Offer";
                        offerBtn.setAttribute("onclick", `removeOffer('${productId}')`);
                    }
                } else {
                    Swal.fire("Failed", response.message || "There was an issue adding the offer.", "error");
                }
            },
            error: () => {
                Swal.fire("Failed", "An error occurred while adding the offer.", "error");
            }
        });
    }
}



//-----------------------------------------------------
async function removeOffer(productId) {
    try {
        const result = await Swal.fire({
            title: 'Remove Offer',
            text: "Are you sure you want to remove the offer?",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Yes, remove it!",
            timer: 5000,
            timerProgressBar: true
        });

        if (result.isConfirmed) {
            const response = await $.ajax({
                url: "/admin/removeProductOffer",
                method: 'POST',
                data: { productId }
            });

            if (response.status === true) {
                Swal.fire('Removed', 'The offer has been removed', 'success');

               
                const row = document.querySelector(`tr[data-product-id="${productId}"]`);
                if (row) {
                 
                    row.querySelector(".offer-value").textContent = `0%`;

                   
                    row.querySelector(".sale-price").textContent = response.salePrice;

                   
                    const offerBtn = row.querySelector(".offer-action");
                    offerBtn.classList.remove("red");
                    offerBtn.classList.add("green");
                    offerBtn.textContent = "Add Offer";
                    offerBtn.setAttribute("onclick", `addOffer('${productId}')`);
                }

            } else {
                Swal.fire('Failed', 'There was an issue removing the offer', 'error');
            }
        }
    } catch (error) {
        console.error(error);
        Swal.fire("Error", "An error occurred during the process.", "error");
    }
}

//---------------------------------
function confirmBlock(productId) {
    Swal.fire({
        title: "Are you sure?",
        text: "Do you really want to block this product?",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#d33",
        cancelButtonColor: "#3085d6",
        confirmButtonText: "Yes, block it!"
    }).then((result) => {
        if (result.isConfirmed) {
            fetch('/admin/blockProduct', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ id: productId })
            })
            .then(res => res.json())
            .then(data => {
                if (data.status) {
                    Swal.fire("Blocked!", "Product has been blocked.", "success");

                
                    document.getElementById(`btn-${productId}`).innerHTML =
                        `<a href="javascript:void(0);" 
                            onclick="confirmUnblock('${productId}')" 
                            class="custom-btn green">Unblock</a>`;
                } else {
                    Swal.fire("Error", data.message, "error");
                }
            })
            .catch(err => {
                console.error(err);
                Swal.fire("Error", "Something went wrong!", "error");
            });
        }
    });
}

//--------------------------------------------
function confirmUnblock(productId) {
    Swal.fire({
        title: "Are you sure?",
        text: "Do you want to unblock this product?",
        icon: "info",
        showCancelButton: true,
        confirmButtonColor: "#28a745",
        cancelButtonColor: "#3085d6",
        confirmButtonText: "Yes, unblock it!"
    }).then((result) => {
        if (result.isConfirmed) {
            fetch('/admin/unblockProduct', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ id: productId })
            })
            .then(res => res.json())
            .then(data => {
                if (data.status) {
                    Swal.fire("Unblocked!", "Product has been unblocked.", "success");

                   
                    document.getElementById(`btn-${productId}`).innerHTML =
                        `<a href="javascript:void(0);" 
                            onclick="confirmBlock('${productId}')" 
                            class="custom-btn red">Block</a>`;
                } else {
                    Swal.fire("Error", data.message, "error");
                }
            })
            .catch(err => {
                console.error(err);
                Swal.fire("Error", "Something went wrong!", "error");
            });
        }
    });
}

    //--------------------------------

    function confirmDelete(productId) {
    Swal.fire({
        title: "Are you sure?",
        text: "This action cannot be undone. Do you want to delete this product?",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#d33",
        cancelButtonColor: "#3085d6",
        confirmButtonText: "Yes, delete it!"
    }).then((result) => {
        if (result.isConfirmed) {
            fetch('/admin/deleteProduct', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ id: productId })
            })
            .then(res => res.json())
            .then(data => {
                if (data.status) {
                    Swal.fire("Deleted!", "Product has been deleted.", "success");

                   
                    const row = document.getElementById(`row-${productId}`);
                    if (row) row.remove();

                  
                } else {
                    Swal.fire("Error", data.message, "error");
                }
            })
            .catch(err => {
                console.error(err);
                Swal.fire("Error", "Something went wrong!", "error");
            });
        }
    });
}


   </script>
</body>
</html>

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Forgot Password</title>
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap" rel="stylesheet">

  <style>
    body {
      font-family: 'Poppins', sans-serif;
      margin: 0;
      padding: 0;
      background: linear-gradient(135deg, #1a1a1a, #333); /* Dark gradient background */
  color: #fff;
      display: flex;
      flex-direction: column;
      min-height: 100vh;
    }

    header {
      background: rgba(255, 223, 0, 0.9); /* Yellow header with slight transparency */
      padding: 1rem;
      text-align: center;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
    }

    header h1 {
      margin: 0;
      font-size: 1.5rem;
      color: #ffcc00; /* Yellow color */
    }

    .container {
        background: rgba(255, 255, 255, 0.1); /* Semi-transparent white background */
      padding: 2rem;
      border-radius: 12px;
      box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
      width: 100%;
      max-width: 400px;
      text-align: center;
      margin: auto; /* Center the container */
    }

    h1 {
        color: #ffcc00; /* Yellow color */
      margin-bottom: 1.5rem;
      font-size: 1.8rem;
    }

    input {
      width: 93%;
      padding: 12px;
      margin: 10px 0;
      border: 1px solid #ddd;
      border-radius: 8px;
      font-size: 1rem;
      outline: none;
      transition: border-color 0.3s ease;
    }

    input:focus {
      border-color: #FFD700; /* Yellow border on focus */
    }

    button {
      width: 100%;
      padding: 12px;
      background-color: #ffcc00; /* Yellow button */
      color: #1a1a1a; /* Dark text */
      border: none;
      border-radius: 8px;
      font-size: 1rem;
      cursor: pointer;
      transition: background 0.3s ease;
    }

    button:hover {
      background: #FFC107; /* Darker yellow on hover */
    }

    .message {
      margin-top: 1rem;
      color: #666;
      font-size: 0.9rem;
    }

    footer {
      background: rgba(139, 69, 19, 0.9); /* Brown footer with slight transparency */
      padding: 1rem;
      text-align: center;
      margin-top: auto; /* Push footer to the bottom */
      box-shadow: 0 -4px 12px rgba(0, 0, 0, 0.3);
    }

    footer p {
      margin: 0;
      font-size: 0.9rem;
      color: #fff; /* White text for contrast */
    }
    .error-message {
  color: red;
  background-color: #ffe6e6;
  border: 1px solid red;
  padding: 10px;
  border-radius: 5px;
  text-align: center;
  font-weight: bold;
  margin-bottom: 10px;
}
/* Style for error messages */
.error {
    color: #d32f2f; /* Red color */
    background-color: #fdecea; /* Light red background */
    border: 1px solid #f44336; /* Darker red border */
    padding: 10px;
    margin: 10px 0;
    border-radius: 5px;
    font-weight: bold;
}

/* Style for success messages */
.success {
    color: #2e7d32; /* Green color */
    background-color: #e8f5e9; /* Light green background */
    border: 1px solid #4caf50; /* Darker green border */
    padding: 10px;
    margin: 10px 0;
    border-radius: 5px;
    font-weight: bold;
}
@media (max-width: 480px) {
  /* Adjust header text size */
  header h1 {
    font-size: 1.2rem;
  }

  /* Adjust container padding for smaller screens */
  .container {
    padding: 1.5rem;
    width: 90%;
    max-width: 90%;
  }

  /* Adjust h1 font size for smaller screens */
  h1 {
    font-size: 1.5rem;
  }

  /* Adjust input fields for smaller screens */
  input {
    width: 93%;
    padding: 10px;
    font-size: 0.9rem;
  }

  /* Adjust button size for smaller screens */
  button {
    padding: 10px;
    font-size: 0.9rem;
  }

  /* Adjust message font size for smaller screens */
  .message {
    font-size: 0.8rem;
  }

  /* Adjust footer padding for smaller screens */
  footer {
    padding: 0.8rem;
  }

  /* Adjust footer text size */
  footer p {
    font-size: 0.8rem;
  }

  /* Adjust error and success message padding for smaller screens */
  .error-message, .error, .success {
    padding: 8px;
    font-size: 0.9rem;
  }
}


  </style>
    <link rel="stylesheet" href="forgot.css">
   
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
</head>
<body>
  <%- include('../../views/partials/user/header') %>
  <div class="container">
    <h1>Forgot Password</h1>
    <div id="messages">
      <% if (typeof messages !== 'undefined' && messages.error) { %>
          <p id="errorMessage" class="error"><%= messages.error %></p>
      <% } %>
      
      <% if (typeof messages !== 'undefined' && messages.success) { %>
          <p id="successMessage" class="success"><%= messages.success %></p>
      <% } %>
    </div>

    <form id="forgotPasswordForm">
      <input type="email" name="email" placeholder="Enter your email" required />
      <button type="submit">Send OTP</button>
    </form>
    <p class="message">We'll send a password reset OTP to your email.</p>
  </div>

  
  <%- include('../../views/partials/user/footer') %>

  <script>
    document.getElementById('forgotPasswordForm').addEventListener('submit', async (e) => {
        e.preventDefault(); 

        const formData = new FormData(e.target);
        const email = formData.get('email');

        const response = await fetch('/forgot-password', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ email }),
        });

        const result = await response.json();

        if (result.success) {
            
            document.getElementById('errorMessage')?.remove();

           
            const successMessage = document.createElement('p');
            successMessage.id = 'successMessage';
            successMessage.className = 'success';
            successMessage.textContent = result.message;
            document.getElementById('messages').prepend(successMessage);

           
            window.location.href = result.redirectUrl;
        } else {
            
            document.getElementById('successMessage')?.remove();

           
            const errorMessage = document.createElement('p');
            errorMessage.id = 'errorMessage';
            errorMessage.className = 'error';
            errorMessage.textContent = result.message;
            document.getElementById('messages').prepend(errorMessage);
        }
    });
  </script>
</body>

</html>
 

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>MuscleBlaze</title>
    <link rel="stylesheet" href="styles.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/drift-zoom/dist/drift-basic.min.css">
<link rel="stylesheet" href="productDetails.css">
</head>
<body>

    <%- include('../../views/partials/user/header') %>
    <div class="breadcrumbs">
      <a href="/">Home</a> <a href="/shop">Shop</a>  <span><%= product.category.name%><span> / <span><%= product.productName%></span>
  
  </div>
  

    <div class="product-details-container">
     
        <div class="product-images">
        
          <!-- <div class="main-image">
            <img src="/uploads/product-images/<%= product.productImage[0] %>" alt="<%= product.productName %>" id="mainImage">
          </div>
     -->

     <div class="main-image">
        <img 
        src="<%= product.productImage && product.productImage.length > 0 ? product.productImage[0] : '/images/default-image.jpg' %>" 
        alt="<%= product.productName %>" 
        id="mainImage"
        class="drift-trigger"
        data-zoom="<%= product.productImage && product.productImage.length > 0 ? product.productImage[0] : '/images/default-image.jpg' %>"
    >
    
    </div>
 
          <div class="thumbnail-gallery">
            <% product.productImage.forEach((image, index) => { %>
                <div class="thumbnail">
                    <img id="zoom-image"
                        src="<%= image %>" 
                        alt="Thumbnail <%= index + 1 %>"
                        onclick="changeMainImage('<%= image %>')"
                    >
                </div>
            <% }) %>
            
          </div>
        </div>

       
        <!-- Product Details Section -->
        <div class="product-info">
          <!-- Category -->
          <div class="product-category">
            <span></span> <%= product.category.name%>
          </div>
    
          <!-- Product Name -->
          <h1 class="product-name"><%= product.productName %></h1>
    
          <!-- Size and Flavor -->
          <div class="size-flavor">
            <div class="size">
              <span>Size:</span> <%= product.size ? product.size + ' kg' : 'N/A' %>
            </div>
            <div class="flavor">
              <span>Flavor:</span> <%= product.flavor || 'N/A' %>
            </div>
          </div>
    
          <!-- Rating -->
          <div class="product-rating">
            <p><strong>Average Rating:</strong> <%= averageRating %> ⭐  (<%= totalReviews %> Reviews)</p>
            
          </div>
    
          <!-- Description -->
          <div class="product-description">
            <h3>Description</h3>
            <p><%= product.description %></p>
          </div>
    
          <!-- Price -->

          <div class="actual_price">
            <span class="mrp">MRP:</span> 
            <span class="price">₹<%= product.regularPrice.toFixed(2) %></span>
        </div>
        


          <div class="product-price">
           
            <span>Price:</span> ₹<%= product.salePrice.toFixed(2) %>
            <% if (product.productOffer && product.productOffer > 0) { %>
              <span class="discount">(<%= product.productOffer %>% off)</span>
            <% } %>
          </div>
    
          <!-- Quantity Selector -->
          <div class="quantity-selector">
            <label for="quantity">Quantity:</label>
            <input 
              type="number" 
              id="quantity" 
              name="quantity" 
              min="1" 
              max="<%= product.quantity %>" 
              value="1"
            >
        


            <span class="stock-status">
              <% if (product.quantity === 0) { %>
                <span class="out-of-stock">Out of Stock</span>
              <% } else if (product.quantity < 5) { %>
                <span class="limited-stock">Only <%= product.quantity %> left in stock!</span>
              <% } else { %>
                <span class="in-stock">In Stock</span>
              <% } %>
            </span>
          </div>
    
          <!-- Action Buttons -->
          <div class="action-buttons">
            <button class="add-to-cart" onclick="addToCart('<%= product._id %>')">Add to Cart</button>
            <!-- <button class="buy-now" onclick="buyNow('<%= product._id %>')" >Buy Now</button> -->
            <button class="buy-now" onclick="buyNow('<%= product._id %>')">Buy Now</button>

            
          </div>
        </div>
      </div>
<!------------------ --------------------------- -->
    




 <!-- Related Products Section -->
 <div class="container">
    <h1>Related Products</h1>
    <div class="products-grid">
        <% if (relatedProducts && relatedProducts.length > 0) { %>
            <% for (let i = 0; i < relatedProducts.length; i++) { %>
                <div class="product-card">
                    <a href="/productDetails?id=<%= relatedProducts[i]._id %>">
                        <img 
                        src="<%= relatedProducts[i].productImage && relatedProducts[i].productImage.length > 0 ? relatedProducts[i].productImage[0] : 'default-image.jpg' %>" 
                        alt="<%= relatedProducts[i].productName %>" 
                        class="product-image"
                    />
                     
                    </a>
                    <div class="product-name"><%= relatedProducts[i].productName %></div>
                    <div class="product-details">Size: <%= relatedProducts[i].size ? relatedProducts[i].size + ' kg' : 'N/A' %></div>
                    <div class="product-details">Flavor: <%= relatedProducts[i].flavor || 'N/A' %></div>
                    <div class="product-details">
                        Price: ₹<%= relatedProducts[i].salePrice ? relatedProducts[i].salePrice.toFixed(2) : '0.00' %> 
                        <% if (relatedProducts[i].productOffer && relatedProducts[i].productOffer > 0) { %>
                            <span class="offer-text">(<%= relatedProducts[i].productOffer %>% off)</span>
                        <% } %>
                    </div>
                    
                    <div class="product-details">
                        <% if (relatedProducts[i].quantity === 0) { %>
                            <span style="color: red; font-weight: bold;">Out of stock</span>
                        <% } else if (relatedProducts[i].quantity < 5) { %>
                            <span style="color: orange; font-weight: bold;">Limited Stock</span>
                        <% } else { %>
                            <span style="color: green; font-weight: bold;">Available</span>
                        <% } %>
                    </div>

                    <div class="wishlist-icon">
                        <i class="fas fa-heart" onclick="addToWishlist('<%= relatedProducts[i]._id %>')"></i>
                    </div>
                    <button class="add-to-cart-btn" onclick="addToCart('<%= relatedProducts[i]._id %>')">Add to Cart</button>
                </div>
            <% } %>
        <% } else { %>
            <p>No related products available.</p>
        <% } %>
    </div>
</div>


<!------------------------------------------------------------>
<div class="container mt-5">
  <h1> Review</h1>
  <div class="row">
      <!-- LEFT SECTION: Review Summary -->
      <div class="col-md-4">
          <div class="card p-3">
              <h4>Customer Reviews</h4>
              <p><strong>Average Rating:</strong> <%= averageRating %> ⭐</p>
              <p><strong>Total Reviews:</strong> <%= totalReviews %></p>

              <!-- Rating Breakdown -->
              <div>
                  <% for (let i = 5; i >= 1; i--) { %>
                      <div class="d-flex align-items-center">
                          <span><%= i %> ⭐</span>
                          <div class="progress flex-grow-1 mx-2" style="height: 10px;">
                              <% let percentage = (ratingCounts[i] / totalReviews) * 100 || 0; %>
                              <div class="progress-bar" style="width: '<%= percentage %>%';"></div>
                          </div>
                          <span>(<%= ratingCounts[i] || 0 %>)</span>
                      </div>
                  <% } %>
              </div>

              <!-- Add Review Button -->
              <button class="btn  mt-3" style="background-color: #ffcc00; color: black;" id="openModalBtn">Add Review</button>
          </div>
      </div>

      <!-- RIGHT SECTION: Customer Reviews -->
      <div class="col-md-8">
          <div class="card p-3">
              <h4>All Reviews</h4>

              <div id="reviewsContainer">
                  <% if (reviews.length === 0) { %>
                      <p>No reviews yet.</p>
                  <% } else { %>
                      <% reviews.forEach(review => { %>
                          <div class="border p-2 my-2">
                              <strong><%= review.user.name %></strong>
                              <span class="badge bg-warning text-dark"><%= review.rating %> ⭐</span>
                              <p><%= review.comment %></p>
                              <small class="text-muted"><%= new Date(review.createdAt).toLocaleDateString() %></small>

                              <% if (user && user._id.toString() === review.user._id.toString()) { %>
                                  <button class="btn btn-sm btn-secondary" onclick="openEditModal('<%= review._id %>', '<%= review.rating %>', '<%= review.comment %>')">
                                      Edit
                                  </button>
                              <% } %>
                          </div>
                      <% }); %>
                  <% } %>
              </div>

            
              <div class="d-flex justify-content-center mt-3">
                <button id="prevPage" class="btn btn-primary me-2" style="background-color: #ffcc00; color: black;" disabled>Previous</button>
                
                <span id="pageInfo">Page 1 of <%= totalPages %></span>
                
                <button id="nextPage" class="btn  ms-2" style="background-color: #ffcc00; color: black;">Next</button>
            </div>
            <input type="hidden" id="productId" value="<%= product._id %>">
            
            
          </div>
      </div>
  </div>
</div>

<!-- Review Modal -->
<div class="modal fade" id="reviewModal" tabindex="-1" aria-labelledby="reviewModalLabel" aria-hidden="true">
  <div class="modal-dialog">
      <div class="modal-content">
          <div class="modal-header">
              <h5 class="modal-title" id="reviewModalLabel">Add Review</h5>
              <button type="button" class="close btn-close" data-bs-dismiss="modal"></button>
          </div>
          <div class="modal-body">
              <form id="reviewForm">
                  <div class="form-group">
                      <label for="rating">Rating:</label>
                      <select class="form-control" id="rating">
                          <option value="5">5 ⭐</option>
                          <option value="4">4 ⭐</option>
                          <option value="3">3 ⭐</option>
                          <option value="2">2 ⭐</option>
                          <option value="1">1 ⭐</option>
                      </select>
                  </div>
                  <div class="form-group">
                      <label for="comment">Review:</label>
                      <textarea class="form-control" id="comment" rows="3" required></textarea>
                  </div>
                  <button type="submit" class="btn btn-primary">Submit Review</button>
              </form>
          </div>
      </div>
  </div>
</div>

<!-- Edit Review Modal -->
<div class="modal fade" id="editReviewModal" tabindex="-1" aria-labelledby="editReviewModalLabel" aria-hidden="true">
  <div class="modal-dialog">
      <div class="modal-content">
          <div class="modal-header">
              <h5 class="modal-title" id="editReviewModalLabel">Edit Review</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
              <form id="editReviewForm">
                  <input type="hidden" id="editReviewId">
                  <div class="mb-3">
                      <label for="editRating" class="form-label">Rating:</label>
                      <input type="number" id="editRating" class="form-control" min="1" max="5" required>
                  </div>
                  <div class="mb-3">
                      <label for="editComment" class="form-label">Comment:</label>
                      <textarea id="editComment" class="form-control" required></textarea>
                  </div>
                  <button type="submit" class="btn btn-primary">Update Review</button>
                  <button type="button" class="btn btn-secondary" onclick="closeEditModal()">Close</button>
              </form>
          </div>
      </div>
  </div>
</div>



<!---------------------------------------------------->


    <%- include('../../views/partials/user/footer') %>
    <script src="/script.js"></script>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">


<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>


<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://cdn.jsdelivr.net/npm/drift-zoom/dist/Drift.min.js"></script>




    <script>
       document.addEventListener("DOMContentLoaded", function () {
    var mainImage = document.querySelector('#mainImage');

    new Drift(mainImage, {
        inlinePane: true,       
        inlineOffsetY: -50,     
        zoomFactor: 2,          
        containInline: true,    
        hoverBoundingBox: false 
    });

    
    function changeMainImage(imageSrc) {
    mainImage.src = imageSrc; 
    mainImage.setAttribute('data-zoom', imageSrc);
}


    window.changeMainImage = changeMainImage;
});

//----------------------------
function addToCart(productId) {
  fetch('/cart/add', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({ productId }),
  })
  .then(response => response.json())
  .then(data => {
    if (data.success) {
      fetchCartWishlistCount();  // ✅ Update cart count only on success
      Swal.fire({
        icon: "success",
        title: "Added to Cart!",
        text: "The product has been added to your cart.",
        showConfirmButton: false,
        timer: 2000
      });
    } else {
      Swal.fire({
        icon: "error",
        title: "Error!",
        text: data.message || "Failed to add product to cart. Please try again.",
      });
    }
  })
  .catch((error) => {
    console.error('Error:', error);
    Swal.fire({
      icon: "error",
      title: "Oops!",
      text: "Something went wrong. Please try again later.",
    });
  });
}

//-------------------------------------

// function buyNow(productId) {
//     const quantity = document.getElementById('quantity').value; 
//     window.location.href = `/checkout?productId=${productId}&quantity=${quantity}`;
// }


function buyNow(productId) {
    const quantity = document.getElementById('quantity') ? document.getElementById('quantity').value : 1;
    console.log("Buying Now | Product ID:", productId, "| Quantity:", quantity);
    window.location.href = `/checkout?productId=${productId}&quantity=${quantity}`;
}

//------------------------
document.addEventListener("DOMContentLoaded", function () {
   
       

        document.getElementById("openModalBtn").addEventListener("click", function () {
            var modal = new bootstrap.Modal(document.getElementById("reviewModal"));
            modal.show();
        });

       
        document.getElementById("reviewForm").addEventListener("submit", function (event) {
            event.preventDefault();
            
            const rating = document.getElementById("rating").value;
            const comment = document.getElementById("comment").value;

            fetch("/add-review", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ productId: "<%= product._id %>", rating, comment })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        title: "Success!",
                        text: "Review added successfully!",
                        icon: "success",
                        confirmButtonText: "OK"
                    }).then(() => location.reload());
                } else {
                    Swal.fire("Error!", data.message, "error");
                }
            })
            .catch(error => console.error("Error:", error));
        });
    });






    function openEditModal(reviewId, rating, comment) {
    document.getElementById("editReviewId").value = reviewId;
    document.getElementById("editRating").value = rating;
    document.getElementById("editComment").value = comment;

    
    var editModal = new bootstrap.Modal(document.getElementById("editReviewModal"));
    editModal.show();
}

document.getElementById("editReviewForm").addEventListener("submit", function (event) {
    event.preventDefault();

    const reviewId = document.getElementById("editReviewId").value;
    const rating = document.getElementById("editRating").value;
    const comment = document.getElementById("editComment").value;

    fetch("/edit-review", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ reviewId, rating, comment })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
           
            Swal.fire({
                icon: "success",
                title: "Review Updated!",
                text: "Your review has been successfully updated.",
                timer: 2000, 
                showConfirmButton: false
            }).then(() => {
               
                var editModal = bootstrap.Modal.getInstance(document.getElementById("editReviewModal"));
                editModal.hide();
                location.reload(); 
            });
        } else {
            Swal.fire({
                icon: "error",
                title: "Update Failed",
                text: data.message
            });
        }
    })
    .catch(error => {
        console.error("Error:", error);
        Swal.fire({
            icon: "error",
            title: "Error",
            text: "Something went wrong. Please try again."
        });
    });
});



function closeEditModal() {
    var editModal = bootstrap.Modal.getInstance(document.getElementById("editReviewModal"));
    editModal.hide();
}
//---------------------------
document.addEventListener("DOMContentLoaded", function () {
    document.getElementById("prevPage")?.addEventListener("click", function () {
        loadReviews(currentPage - 1);
    });

    document.getElementById("nextPage")?.addEventListener("click", function () {
        loadReviews(currentPage + 1);
    });
});

function loadReviews(page) {
    const productId = document.getElementById("productId").value; 

    fetch(`/product-details?id=${productId}&page=${page}`, { headers: { "X-Requested-With": "XMLHttpRequest" } })
        .then(response => response.json())
        .then(data => {
            if (data.reviews) {
                updateReviewsUI(data.reviews, data.currentPage, data.totalPages);
            }
        })
        .catch(error => console.error("Error fetching reviews:", error));
}

function updateReviewsUI(reviews, currentPage, totalPages) {
    const reviewsContainer = document.getElementById("reviewsList");
    reviewsContainer.innerHTML = ""; 

    reviews.forEach(review => {
        const reviewElement = document.createElement("div");
        reviewElement.innerHTML = `
            <div class="review">
                <p><strong>${review.userName}</strong> - ${review.rating}⭐</p>
                <p>${review.comment}</p>
            </div>
        `;
        reviewsContainer.appendChild(reviewElement);
    });

  
    document.getElementById("prevPage").disabled = currentPage === 1;
    document.getElementById("nextPage").disabled = currentPage === totalPages;
}


//-------------------------

    </script>



    
</body>
</html>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>MuscleBlaze</title>
    <link rel="stylesheet" href="styles.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="checkout.css">


</head>
<body>
    <%- include('../../views/partials/user/header') %>
    <div class="breadcrumbs">
        <a href="/">Home</a>  <a href="/checkout">Checkout</a>
    </div>

    <div class="container checkout-container">
        <h1 class="text-center my-4">Checkout</h1>

         
    <input type="hidden" id="cartItemsData" value='<%= JSON.stringify(cartItems) %>'>
    <input type="hidden" id="grandTotalData" value="<%= grandTotal || 0 %>">
    <input type="hidden" id="quantityData" value="<%= quantity || 0 %>">
    <input type="hidden" id="quantity" value="<%= quantity %>">

    <% if (cartItems.length === 1 && cartItems[0].product) { %>
      
        <input type="hidden" id="productId" value="<%= cartItems[0].product._id %>">
    <% } else { %>
       
        <% cartItems.forEach(item => { %>
            <input type="hidden" name="productId[]" value="<%= item.product._id %>">
        <% }) %>
    <% } %>
    
   

    
        <div class="checkout-wrapper">
          
            <div class="checkout-left">
                <h3>Order Summary</h3>
                <div class="summary-details">
                    <p><strong>Total Items:</strong> <%= quantity %></p>
            <p><strong>Original Total:</strong> ₹<span id="originalTotal"><%= originalTotal.toFixed(2) %></span></p>

            <% if (discount && discount > 0) { %>
                <p id="couponApplied"><strong>Coupon Applied:</strong> <%= couponCode %></p>
                <p><strong>Discount:</strong> - ₹<span id="discountAmount"><%= discount.toFixed(2) %></span></p>
            <% } else { %>
                <p id="couponApplied"><strong>Coupon Applied:</strong> None</p>
                <p><strong>Discount:</strong> - ₹<span id="discountAmount">0.00</span></p>
            <% } %>

            <p><strong>Final Payable Amount:</strong> ₹<span id="finalTotal"><%= grandTotal.toFixed(2) %></span></p>
                </div>
            </div>
    
            <!-- Right: Address Selection -->
            <div class="checkout-right">
                <h3>Select Delivery Address</h3>
                
                <% if (Array.isArray(addresses) && addresses.length > 0) { %>
                    <% addresses.forEach((address, index) => { %>
                        <div class="address-box">
                            <input 
                                type="radio" 
                                name="selectedAddress" 
                                id="address-<%= index %>" 
                                value="<%= address._id %>" 
                                required 
                                <%= index === 0 ? 'checked' : '' %>  
                            
                            <label for="address-<%= index %>">
                                <strong><%= address.name %></strong><br>
                                <%= address.landmark %>, <%= address.city %>, <%= address.state %> - <%= address.pincode %><br>
                                Phone: <%= address.phone %>
                            </label>
                            <a data-address-id="<%= address._id %>" class="edit-btn"><i class="fa fa-edit"></i> </a>
                        </div>
                    <% }); %>
                <% } else { %>
                    <p>No addresses found</p>
                   
                <% } %>
                
    
              
                <a  class="add-address-btn" id="addAddressBtn" ><i class="fa fa-plus"></i> Add New Address</a>
    
               
                <button class="checkout-btn" type="button" onclick="proceedToPayment(event)">Proceed to Payment</button>



<!-- Coupon Code Section -->
<div class="coupon-section">
    <h3>Apply Coupon</h3>
    <div style="display: flex; justify-content: center; align-items: center;">
        <input type="text" id="couponCode" class="form-control" placeholder="Enter coupon code">
        <button id="applyCouponBtn">Apply</button>
        <button id="showCouponsBtn">Coupons</button>
    </div>
    <p id="couponError" class="text-danger" style="display: none;"></p>
    <p id="couponSuccess" class="text-success" style="display: none;"></p>
</div>

<!-- Coupon Modal --><div id="couponModal" class="modal universal-modal">
    <div class="modal-content">
        <span class="close">&times;</span>
        <h2>Available Coupons</h2>
        <div class="coupon-list">
            <% if (availableCoupons.length > 0) { %>
                <% availableCoupons.forEach(coupon => { %>
                    <div class="coupon-card">
                        <h4><%= coupon.name %></h4>
                        <p>
                            <% if (coupon.discountType === 'percentage') { %>
                                <strong><%= coupon.discountValue %>% Off</strong> (Min ₹<%= coupon.minimumPrice %>)
                            <% } else { %>
                                <strong>₹<%= coupon.discountValue %> Off</strong>
                            <% } %> 
                        </p>
                        <button class="apply-coupon-btn" data-code="<%= coupon.name %>">Apply</button>
                    </div>
                <% }); %>
            <% } else { %>
                <p>No available coupons</p>
            <% } %>
        </div>
    </div>
</div>

        


            </div>
        </div>
    </div>



    <div id="addAddressModal" class="modal fade custom-modal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog-scrollable"> 
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Add Address</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <!-- Error message area -->
                    <div id="error-message" class="alert alert-danger d-none"></div>
    
                    <form id="addressForm">
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="addressType" class="form-label">Address Type</label>
                                <input type="text" class="form-control" id="addressType" >
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="name" class="form-label">Name</label>
                                <input type="text" class="form-control" id="name" >
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="phone" class="form-label">Phone</label>
                                <input type="text" class="form-control" id="phone"  pattern="[0-9]{10}">
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="pincode" class="form-label">Pincode</label>
                                <input type="number" class="form-control" id="pincode" >
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="city" class="form-label">City</label>
                                <input type="text" class="form-control" id="city" >
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="state" class="form-label">State</label>
                                <input type="text" class="form-control" id="state" >
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="district" class="form-label">District</label>
                                <input type="text" class="form-control" id="district" >
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="landmark" class="form-label">Landmark</label>
                                <input type="text" class="form-control" id="landmark">
                            </div>
                        </div>
                        <div class="text-end">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                            <button type="submit" class="btn btn-primary">Save Address</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>




    <!-- Edit Address Modal -->
<div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" id="edit-modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editModalLabel">Edit Address</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Error Message Section -->
                <div id="edit-address-error" class="alert alert-danger" style="display: none;"></div>

                <form id="editAddressForm">
                    <input type="hidden" id="edit-address-id" name="addressId">

                    <div class="form-group">
                        <label for="edit-address-type">Address Type</label>
                        <input type="text" id="edit-address-type" name="addressType" class="form-control" required>
                    </div>

                    <div class="form-group">
                        <label for="edit-name">Name</label>
                        <input type="text" id="edit-name" name="name" class="form-control" required>
                    </div>

                    <div class="form-group">
                        <label for="edit-city">City</label>
                        <input type="text" id="edit-city" name="city" class="form-control" required>
                    </div>

                    <div class="form-group">
                        <label for="edit-landmark">Landmark</label>
                        <input type="text" id="edit-landmark" name="landmark" class="form-control">
                    </div>

                    <div class="form-group">
                        <label for="edit-state">State</label>
                        <input type="text" id="edit-state" name="state" class="form-control" required>
                    </div>

                    <div class="form-group">
                        <label for="edit-district">District</label>
                        <input type="text" id="edit-district" name="district" class="form-control" required>
                    </div>

                    <div class="form-group">
                        <label for="edit-pincode">Pincode</label>
                        <input type="text" id="edit-pincode" name="pincode" class="form-control" required>
                    </div>

                    <div class="form-group">
                        <label for="edit-phone">Phone</label>
                        <input type="text" id="edit-phone" name="phone" class="form-control" required>
                    </div>

                    <button type="submit" class="btn btn-primary mt-3 w-100">Update Address</button>
                </form>
            </div>
        </div>
    </div>
</div>


<div id="payment-loader" style="display: none; text-align: center; padding: 20px;">
    <img src="/images/loader.gif" alt="Processing Payment..." width="80">
    <p>Processing Payment...</p>
</div>

    



    <%- include('../../views/partials/user/footer') %>
</body>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
<script>

document.addEventListener("DOMContentLoaded", function() {
        const modal = document.getElementById("couponModal");
        const showCouponsBtn = document.getElementById("showCouponsBtn");
        const closeModal = document.querySelector(".close");
        const couponInput = document.getElementById("couponCode");

        showCouponsBtn.addEventListener("click", function() {
            modal.style.display = "block";
        });

    
        closeModal.addEventListener("click", function() {
            modal.style.display = "none";
        });

      
        document.querySelectorAll(".apply-coupon-btn").forEach(button => {
            button.addEventListener("click", function() {
                const couponCode = this.getAttribute("data-code");
                couponInput.value = couponCode;
                modal.style.display = "none"; 
            });
        });

      
        window.addEventListener("click", function(event) {
            if (event.target === modal) {
                modal.style.display = "none";
            }
        });
    });


//-------------------------------

document.getElementById('addAddressBtn').addEventListener('click', function() {
    const modal = new bootstrap.Modal(document.getElementById('addAddressModal'));
    modal.show();
});

document.getElementById('addressForm').addEventListener('submit', async function(e) {
    e.preventDefault();
    const errorMessage = document.getElementById('error-message');
    errorMessage.classList.add('d-none');

    const addressData = {
        addressType: document.getElementById('addressType').value,
        name: document.getElementById('name').value,
        city: document.getElementById('city').value,
        landmark: document.getElementById('landmark').value,
        state: document.getElementById('state').value,
        district: document.getElementById('district').value,
        pincode: document.getElementById('pincode').value,
        phone: document.getElementById('phone').value,
    };

    try {
        const response = await fetch('/add-address', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(addressData),
        });

        const result = await response.json();

        if (result.success) {
            const modal = bootstrap.Modal.getInstance(document.getElementById('addAddressModal'));
            modal.hide();
            document.getElementById('addressForm').reset();
            window.location.reload();
        } else {
            errorMessage.textContent = result.message || 'Something went wrong!';
            errorMessage.classList.remove('d-none');
        }
    } catch (error) {
        console.error('Error:', error);
        errorMessage.textContent = 'Server error. Try again later!';
        errorMessage.classList.remove('d-none');
    }
});


//--------------------------------------------------------
document.querySelectorAll(".edit-btn").forEach(button => {
    button.addEventListener("click", function () {
        const addressId = this.getAttribute("data-address-id");
        console.log("Clicked Edit Button - Address ID:", addressId);

        if (!addressId) {
            alert("Address ID is missing!");
            return;
        }

        fetch(`/get-address/${addressId}`)
            .then(response => {
                if (!response.ok) {
                    throw new Error(`HTTP error! Status: ${response.status}`);
                }
                return response.json();
            })
            .then(data => {
                console.log("Fetched Address Data:", data);

                if (data.error) {
                    alert("Error: " + data.error);
                    return;
                }

                
                document.querySelector("#edit-address-type").value = data.addressType;
                document.querySelector("#edit-name").value = data.name;
                document.querySelector("#edit-city").value = data.city;
                document.querySelector("#edit-landmark").value = data.landmark;
                document.querySelector("#edit-state").value = data.state;
                document.querySelector("#edit-district").value = data.district;
                document.querySelector("#edit-pincode").value = data.pincode;
                document.querySelector("#edit-phone").value = data.phone;

               
                document.querySelector("#edit-address-id").value = addressId;

              
                var myModal = new bootstrap.Modal(document.getElementById('editModal'));
                myModal.show();
            })
            .catch(error => console.error("Error fetching address:", error));
    });
});

//-----------------------------------------------------------------

document.querySelector("#editAddressForm").addEventListener("submit", function (e) {
    e.preventDefault();

    const addressId = document.querySelector("#edit-address-id").value;
    const formData = new FormData(this);

    fetch(`/update-address/${addressId}`, {
        method: "PUT",
        body: JSON.stringify(Object.fromEntries(formData)),
        headers: { "Content-Type": "application/json" }
    })
    .then(response => response.json())
    .then(data => {
       
        document.getElementById("edit-address-error").style.display = "none";
        document.getElementById("edit-address-error").innerHTML = '';

        if (data.success) {
          
            location.reload();
        } else {

            document.getElementById("edit-address-error").style.display = "block";
            document.getElementById("edit-address-error").innerHTML = data.message;
        }
    })
    .catch(error => console.error("Error updating address:", error));
});


//-----------------------------------------------------------------------
function proceedToPayment() {
    const selectedAddress = document.querySelector('input[name="selectedAddress"]:checked');
    
    if (!selectedAddress) {
        Swal.fire({ icon: "warning", title: "Select Address", text: "Please select an address before proceeding." });
        return;
    }

    const checkoutData = {
        addressId: selectedAddress.value,
        cartItems: JSON.parse(document.getElementById('cartItemsData').value),
        grandTotal: parseFloat(document.getElementById('grandTotalData').value),
        quantity: parseInt(document.getElementById('quantityData').value)
    };

    fetch('/proceed-to-payment', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(checkoutData)
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            window.location.href = "/payment"; 
        } else {
            Swal.fire({ icon: "error", title: "Error", text: "Something went wrong. Try again." });
        }
    })
    .catch(error => {
        console.error("Checkout error:", error);
        Swal.fire({ icon: "error", title: "Error", text: "Failed to proceed. Try again later." });
    });
}
//-------------------------------------------

document.addEventListener("DOMContentLoaded", function () {
    console.log("Script Loaded!");

    const applyCouponBtn = document.getElementById("applyCouponBtn");
    const couponInput = document.getElementById("couponCode");
    const grandTotalElement = document.getElementById("finalTotal");
    const originalTotalElement = document.getElementById("originalTotal");
    const discountAmountElement = document.getElementById("discountAmount");
    const couponAppliedElement = document.getElementById("couponApplied");

    if (!applyCouponBtn || !couponInput || !grandTotalElement) {
        console.error("Required elements not found!");
        return;
    }

    applyCouponBtn.addEventListener("click", function () {
        console.log("Apply Coupon Button Clicked!");

        if (applyCouponBtn.innerText === "Remove") {
            removeCoupon();
            return;
        }

        const couponCode = couponInput.value.trim();
        if (!couponCode) {
            Swal.fire({
                icon: 'warning',
                title: 'Oops!',
                text: 'Please enter a coupon code.'
            });
            return;
        }

        applyCouponBtn.disabled = true;

        const productId = document.getElementById("productId")?.value || null;
        const quantity = document.getElementById("quantity")?.value || 1;

        console.log("📡 Sending coupon request with:", { couponCode, productId, quantity });

        fetch("/apply-coupon", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ couponCode, productId, quantity })
        })
        .then(response => response.json())
        .then(data => {
            console.log("Response received:", data);

            if (data.success) {
                Swal.fire({
                    icon: 'success',
                    title: 'Coupon Applied!',
                    text: `Discount: ₹${data.discount}\nNew Total: ₹${data.newTotal}`,
                });

                if (discountAmountElement) {
                    discountAmountElement.textContent = data.discount.toFixed(2);
                }
                if (grandTotalElement) {
                    grandTotalElement.textContent = data.newTotal.toFixed(2);
                }
                if (couponAppliedElement) {
                    couponAppliedElement.innerHTML = `<strong>Coupon Applied:</strong> ${data.couponCode}`;
                }

                applyCouponBtn.innerText = "Remove";
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops!',
                    text: data.message
                });
            }
        })
        .catch(error => {
            console.error("Error applying coupon:", error);
            Swal.fire({
                icon: 'error',
                title: 'Something went wrong',
                text: 'Please try again.'
            });
        })
        .finally(() => {
            applyCouponBtn.disabled = false;
        });
    });

    function removeCoupon() {
        console.log("Removing coupon...");

        fetch("/remove-coupon", { method: "POST" })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                Swal.fire({
                    icon: 'info',
                    title: 'Coupon Removed',
                    text: 'Coupon has been removed successfully.'
                });

                if (discountAmountElement) {
                    discountAmountElement.textContent = "0.00";
                }
                if (grandTotalElement) {
                    grandTotalElement.textContent = data.newTotal.toFixed(2);
                }
                if (couponAppliedElement) {
                    couponAppliedElement.innerHTML = "";
                }

                couponInput.value = "";
                applyCouponBtn.innerText = "Apply";
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: data.message
                });
            }
        })
        .catch(error => {
            console.error("Error removing coupon:", error);
            Swal.fire({
                icon: 'error',
                title: 'Something went wrong',
                text: 'Please try again.'
            });
        });
    }
});

//----------------------------------


</script>
</html>